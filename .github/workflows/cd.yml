name: cd

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    env:
      ENV_PATH: .env
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Node -v
        run: node -v

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_GITHUB_CLIENT_ID=${{secrets.SOCIAL_GITHUB_CLIENT_ID}}" >> .env.production
          echo "NEXT_PUBLIC_GITHUB_REDIRECT_URL=${{secrets.SOCIAL_GITHUB_REDIRECT_URL}}" >> .env.production
          echo "NEXT_PUBLIC_BASE_URL=${{secrets.API_BASE_URL}}" >> .env.production

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Next App
        run: pnpm run build

      - name: Make zip file
        run: zip -qq -r ./wtntservice.zip . -x "node_modules/*"
        shell: bash
        # -qq: quit 모드로 실행 (에러나 경고메세지만 출력하도록 함)
        # -r: 지정된 디렉토리를 재귀적으로 압축 (하위 디렉토리와 파일들 모두 압축)

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Upload to S3
        run: aws s3 cp --region ${{secrets.AWS_REGION}} ./wtntservice.zip s3://${{secrets.AWS_BUCKET_NAME}}/wtnt.zip

      - name: Code Deploy # S3에 올라간 zip 파일을 CodeDeploy로 가져옴
        run: aws deploy create-deployment
          --application-name ${{secrets.AWS_CODE_DEPLOY_APP_NAME}}
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name ${{secrets.AWS_CODE_DEPLOY_GROUP_NAME}}
          --s3-location bucket=${{secrets.AWS_BUCKET_NAME}},key=wtntservice.zip,bundleType=zip
